name: Codedeploy Trigger

on:
  workflow_run:
    workflows: ['IMAGE PUSH TO ECR']
    types:
      - completed
    branches: [main]

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ap-northeast-1 # AWSリージョン
  ECR_REPOSITORY: dev/practice # ECRリポジトリ名

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check IMAGE PUSH TO ECR Workflow
        run: echo "Codedeploy Trigger is running after IMAGE PUSH TO ECR completed successfully"

      - name: Configure AWS Credential
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN_FOR_GOLANG }}

      - name: Fetch TaskDefinition from ECS and generate task-def.json file
        run: |
          aws ecs describe-task-definition --task-definition terraform-family | \
            jq '.taskDefinition | del (.taskDefinitionArn, .revision, .status, .requiresAttributes, .compatibilities)' > task-def.json

      - name: Render TaskDefinition
        id: render-container-api
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-def.json
          container-name: go
          image: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:go-${{ github.run_number }}

      - name: Register New Task Definition
        run: |
          aws ecs register-task-definition --cli-input-json file://${{ steps.render-container-api.outputs.task-definition }}

      - name: Deploy with CodeDeploy
        run: |
          TASK_DEFINITION=$(jq -r '.taskDefinition.taskDefinitionArn' <<< "${{ steps.render-container-api.outputs.task-definition }}")
          aws deploy create-deployment \
            --application-name terraform-ecs-app \
            --deployment-group-name ecs-deployment-group \
            --deployment-config-name CodeDeployDefault.ECSAllAtOnce \
            --description "Deploy from GitHub Actions" \
            --s3-location bucket=${{ secrets.S3_BUCKET_NAME }},bundleType=yml,key=codedeploy/appspec.yml \
            --revision "{\"revisionType\":\"AppSpecContent\",\"appSpecContent\":{\"content\":\"{\\\"version\\\":\\\"0.0\\\",\\\"Resources\\\":[{\\\"TargetService\\\":{\\\"Type\\\":\\\"AWS::ECS::Service\\\",\\\"Properties\\\":{\\\"TaskDefinition\\\":\\\"$TASK_DEFINITION\\\"}}}]}}\"}"
